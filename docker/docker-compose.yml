version: '3.7'

services:
  database:
    image: postgres:latest
    container_name: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#
#    ports:
#      - "${PGADMIN_PORT:-5050}:80"
#    networks:
#      - backend
#    restart: unless-stopped
#
#  configserver:
#    build: ../configserver
#    image: configserver-image
#    container_name: configserver
#    ports:
#      - '8071:8071'
#    networks:
#      backend:
#        aliases:
#          - "configserver"
#  eurekaserver:
#    build: ../eurekaserver
#    image: eurekaserver-image
#    ports:
#      - "8761:8761"
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_started
#    networks:
#      backend:
#        aliases:
#          - "eurekaserver"
#  licensingservice:
#    build: ../licensing-service
#    image: licensing-service-image
#    container_name: licenseservice
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
#      - CONFIGSERVER_URI=http://configserver:8071
#      - CONFIGSERVER_PORT=8071
#      - DATABASESERVER_PORT=5432
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_healthy
#    ports:
#      - '8080:8080'
#    networks:
#      backend:
#        aliases:
#          - "licenseservice"
#  organizationservice:
#    build: ../organization-service
#    image: organization-service-image
#    container_name: organizationservice
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev
#      - CONFIGSERVER_URI=http://configserver:8071
#      - CONFIGSERVER_PORT=8071
#      - DATABASESERVER_PORT=5432
#    depends_on:
#      database:
#        condition: service_healthy
#      configserver:
#        condition: service_healthy
#    ports:
#      - '8081:8081'
#    networks:
#      backend:
#        aliases:
#          - "organizationservice"

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  vault: