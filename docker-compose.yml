version: '3'

services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    build: configserver
    image: configserver-image
    container_name: configserver
    ports:
      - '8071:8071'
    networks:
      backend:
        aliases:
          - "configserver"
  licensingservice:
    build: licensing-service
    image: licensing-service-image
    container_name: licenseservice
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - CONFIGSERVER_URI=http://configserver:8071
      - CONFIGSERVER_PORT=8071
      - DATABASESERVER_PORT=5432
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy
    ports:
      - '8080:8080'
    networks:
      backend:
        aliases:
          - "licenseservice"



networks:
  backend:
    driver: bridge