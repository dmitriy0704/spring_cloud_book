version: '3.7'

services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "ostock_dev"
    volumes:
      - postgres:/data/postgres
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped

  #  configserver:
  #    build: configserver
  #    image: configserver-image
  #    container_name: configserver
  #    ports:
  #      - '8071:8071'
  #    networks:
  #      backend:
  #        aliases:
  #          - "configserver"
  #  licensingservice:
  #    build: licensing-service
  #    image: licensing-service-image
  #    container_name: licenseservice
  #    environment:
  #      - SPRING_PROFILES_ACTIVE=dev
  #      - CONFIGSERVER_URI=http://configserver:8071
  #      - CONFIGSERVER_PORT=8071
  #      - DATABASESERVER_PORT=5432
  #    depends_on:
  #      database:
  #        condition: service_healthy
  #      configserver:
  #        condition: service_healthy
  #    ports:
  #      - '8080:8080'
  #    networks:
  #      backend:
  #        aliases:
  #          - "licenseservice"
#  vault:
#    image: vault:latest
#    container_name: vault
#    restart: on-failure:10
#    ports:
#      - "8201:8201"
#    environment:
#      VAULT_ADDR: 'https://0.0.0.0:8201'
#      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"0", "tls_cert_file":"/data/vault-volume/certificate.pem", "tls_key_file":"/data/vault-volume/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
#      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
#      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
#    cap_add:
#      - IPC_LOCK
#    volumes:
#      - vault-volume:/data
#    healthcheck:
#      retries: 5
#    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"
#    networks:
#          backend:
#            aliases:
#              - "vault"
networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  vault: